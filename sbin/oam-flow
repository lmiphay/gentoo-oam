#!/bin/bash

source /etc/gentoo-oam.conf
source /usr/share/gentoo-oam/gentoo-oam-functions.sh

[[ "$1" = "-d" ]] && DRYRUN="echo" && shift
flowname=${1:-weekly}

[[ -f /etc/gentoo-oam.d/${flowname}.conf ]] && . /etc/gentoo-oam.d/${flowname}.conf

resulthandler()
{
    local step="$1"
    local result=$2

    oam_log "$flowname/$step result=$result"

    if [[ $result -ne 0 && -n "$OAM_ONERROR" ]] ; then
	oam_log "running error handler: $OAM_ONERROR $flowname $step $result"
	$OAM_ONERROR $flowname $step $result
	if [[ $? -eq 7 ]] ; then
	    oam_log "$OAM_ONERROR has requested workflow continuation"
	    result=0
	fi
    fi

    return $result
}

execstep()
{
    local step="$1"

    if [[ $step =~ (.*):(.*) ]] ; then
	$DRYRUN ssh ${BASH_REMATCH[1]} "${BASH_REMATCH[2]}"
    else
	$DRYRUN $step
    fi
    
    resulthandler "$step" $?
}

execstage()
{
    local stage="$1"
    local pid=()
    
    for step in ${stage} ; do
	if [[ $step =~ (.*)& ]] ; then
	    $execstep "${step/&/}" &
	    disown $!
	else
	    $execstep "$step" &
	    pid+=($!)
	fi
    done

    local result=0

    for ((i=0; i<${#pid[@]}; i++)) ; do
	wait ${pid[$i]} || result=1
    done

    return $result
}

oam_log "oam-flow $flowname start"

while read -r -a stage; do
    oam_log "running stage ${stage[@]}"
    execstage "${stage[@]}" || oam_die "$flowname ( ${stage[@]} )  failed - exiting"
done <<<"$(printf '%s' "${OAM_FLOW}")" >>$(oam_logfile ${flowname}) 2>&1 

oam_log "$scriptname generating merge summary"
oam-summary $OAM_LOGDATE >>$(oam_logfile summary)

oam_log "oam-flow $flowname complete"

exit 0
