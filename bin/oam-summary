#!/bin/bash

source /etc/gentoo-oam.conf
source /usr/share/gentoo-oam/gentoo-oam-functions.sh

cd $OAM_LOGDIR || oam_die "$OAM_LOGDIR is missing - exiting"

if [[ $# -eq 1 ]] ; then
    LOGDATE=$1
else
    LOGDATE=$(ls -1dt 2* | head -1)
fi

echo "$(oam_ts) summary report for $LOGDATE"

echo "$(oam_ts) checking file permissions and ownership"
oam checkconfig | oam_indent

echo "$(oam_ts) checking for obsolete portage configuration entries"
eix --test-non-matching --test-obsolete --exact | \
    egrep -v 'No non-matching|No matches found.|The names of all installed packages are in the database.' | sed '/^\s*$/d' | oam_indent

mergelog=$LOGDATE/merge.log
blockslog=$LOGDATE/blocks.log
kernellog=$LOGDATE/kernel.log

echo "$(oam_ts) merges"
if [[ -f "$mergelog" ]] ; then
    while read firsttoken line ; do
	if [[ "$firsttoken" = '[ebuild' ]] ; then
	    while read firsttoken line ; do
		if [[ "$firsttoken" = 'Total:' ]] ; then
		    break 2
		else
		    echo "$firsttoken $line" | oam_indent
		fi
	    done
	fi
    done <$mergelog
else
    echo "$(oam_ts) $mergelog not found"
fi

if [[ -f $blockslog ]] ; then
    echo "$(oam_ts) errors/blocked packages"
    cat $blockslog | \
	sed -e 's/ \* //' -e '/^\s*$/d' | \
	egrep -v 'created log file|The following |postinst:|ebuild scheduled for merge|After world updates,|emerge --depclean.' | \
	egrep -v 'Use --autounmask-write|Carefully examine the list|paying special attention|experimental or unstable packages' | \
	egrep -v 'It may be possible|prevent one of those|possible that confl|impossible to satisfy|the dependencies of|not be installed|For more information, see|page or refer to' | \
	egrep -v 'Multiple package instances|into the dependency graph' | \
	egrep -v '\^\^\^\^\^\^' | \
	oam_indent
fi

PREVDATE=$(oam_prevdate $LOGDATE)
echo "$(oam_ts) checking for qcheck differences"
if [[ -f $LOGDATE/qcheck.log && -f $PREVDATE/qcheck.log ]] ; then
    diff -u $PREVDATE/qcheck.log $LOGDATE/qcheck.log | oam_indent
fi

echo "$(oam_ts) checking for unread news items"
oam_checknews | oam_indent

if [[ -f "$mergelog" ]] ; then
    echo "$(oam_ts) merges: $(grep 'Size of downloads:' $mergelog | head -1)"
    egrep ' merged\.$' $mergelog | sed -e 's/^>>> //' | sort | oam_indent
fi

if [[ -f $blockslog ]] ; then
    echo "$(oam_ts) checking for any required keyword/use changes"
    egrep '^>|^=' $blockslog | sort | uniq | oam_indent
    echo "$(oam_ts) checking for packages which failed to install"
    egrep '^ \*  \(' $blockslog | sort | uniq | \
	awk '{print $2}' | sed -e 's:^.::' -e 's:,::' | oam_indent
fi

if [[ -f $kernellog ]] ; then
    echo "$(oam_ts) checking for kernel build"
    kernver=$(egrep 'DEPMOD' $kernellog | awk '{print $2}')
    if [ -n "$kernver" ] ; then
	echo "$kernver built" | oam_indent
    fi
fi

echo "$(oam_ts) summary report complete for $LOGDATE"

exit 0
