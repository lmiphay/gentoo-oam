#!/bin/bash

source /etc/gentoo-oam.conf
source /usr/share/gentoo-oam/gentoo-oam-functions.sh

set -e

logfile=$(oam_logfile kernel)
usrsrc_kernel=$(readlink /usr/src/linux|sed -e 's/^linux-//')
running_kernel=$(uname -r)
repo=$OAM_KERNEL_CONFIG_REPO
config=/usr/src/linux/.config

oam_kernel_cp_config() {
    [[ ! -f "$1" ]] && return 1
    
    oam_log "${2:-cat} $1 > $config"
    ${2:-"cat"} $1 > $config
    return 0
}

oam_kernel_backup_config()
{
    if [[ -x /usr/bin/git ]] ; then
	[[ ! -d $repo ]] && mkdir -p $repo && oam_cmd $logfile git init $repo
	cd $repo
	oam_cmd $logfile cp -p $config $HOSTNAME
	oam_cmd $logfile git add $HOSTNAME
	oam_cmd $logfile git commit -m "${HOSTNAME}/${usrsrc_kernel}/oam-kernel"
    else
	[[ ! -d /usr/src/kernel-config ]] && mkdir -p /usr/src/kernel-config
	oam_cmd $logfile cp -p $config /usr/src/kernel-config/${HOSTNAME}-$usrsrc_kernel
    fi
}

oam_kernel_config()
{
    if [[ -f "$config" ]] ; then
	oam_log "$config found - not overwriting"
    else
	oam_kernel_cp_config "/usr/src/linux-${running_kernel}/.config" || \
	oam_kernel_cp_config "/proc/config.gz" "zcat"             || \
	oam_kernel_cp_config "/boot/config-$(uname -r)"           || \
	oam_kernel_cp_config "$repo/$HOSTNAME"

	oam_cmd $logfile make -C /usr/src/linux olddefconfig
	oam_kernel_backup_config
    fi
}

oam_kernel_install_efi()
{
    local tag=$1
    oam_cmd $logfile cp -p /usr/src/linux/arch/x86_64/boot/bzImage /boot/efi/EFI/Boot/${tag}.efi
    oam_cmd $logfile efibootmgr --create --part 1 --label "${tag}" --loader '\efi\boot\'${tag}.efi
}

oam_kernel_build()
{
    oam_cmd $logfile make -C /usr/src/linux all modules_install
    oam-merge @module-rebuild
}

if [[ "$1" = "build" ]] ; then
    oam_kernel_build
else
    oam_log "kernel updater start: running kernel=${running_kernel}, latest /usr/src kernel=$usrsrc_kernel"

    if [[ -d /lib/modules/$usrsrc_kernel ]] ; then
	oam_log "/lib/modules/$usrsrc_kernel found - kernel build will not be attempted"
    elif [[ -f /usr/src/linux/vmlinux ]] ; then
	oam_log "/usr/src/linux/vmlinux (partial? build) found - kernel build will not be attempted"
    else
	# eselect kernel list
	oam_kernel_config
	oam_kernel_build
	if [[ $OAM_KERNEL_INSTALL -eq 1 ]] ; then
	    [[ -d /boot/efi/EFI/Boot && -x /usr/sbin/efibootmgr ]] && oam_kernel_install_efi $usrsrc_kernel
	fi
    fi

    oam_log "kernel updater complete"
fi

exit 0
